(+ (string-length "asdas") (+ 2 (string-length "asd") 3) (string-length "ss"))
(+ 1 (+ 2 (+ 2 3) (+ 2 3) 3) (+ 2 3) 2)
(if (not (< 2 (string-length "asd"))) "TRUE" "FALSE")
(if (not (not (not (< (string-length "asd") (string-length "dsa"))))) (not (not (equal? #t #f))) (* 1 2 3 4 5))
(+ 1 2 3 (+ 3 5) (- 3 4 5 (+ 2 3)))
(string=? x x)
(string=? x y)
(string=? "sd" "sd")
(string=? (substring "asda" 1 2) (substring "asdssss" 3 4))
(< (string-length (substring "asd" 0)) 4)
(lcm 12 81)
(gcd 12 81)
(list? '(1 2 3))
(string-contains? "asdasd" "sda")
(string-upcase "sada")
(string-downcase "SADA")
(list "asd" #t (not #t) (string-length "asd") "sda" 2 3 (* 1 2 3 5))
(list '(1 2) 3)
(list '(1 '(1 2)) 3)
(list '(1 (1 2)) 3)
(list '(1 2) '(1 2))
(list 3 '(1 2))
(list 3 '(1 2) (list 3 '(1 2)))
(list? '(1 2))
(list? (cons 1 (cons 2 '())))
(if (list? '(1 2)) "asd" "da")
(if (null? '()) #t #f)
(list '((1 2)))
(cons 1 (cons 1 '()))
(cons 1 (cons 1 (cons 1 '())))
(cons 1 (cons 1 2))
(cons 1 (cons 1 (list 1 "st" (string-length "asd"))))
(cons 1 (string-length "asd"))	
(cons? (cons 1 2))
(list? null)	
(list? (null))
(null? (null))
(car '((1 2) 3))
(car '((+ 1 2) 3))
(list '(1 2 (+ 1 2)))
(car '((())))
(cdr '(1 2))
(cdr '(1 1 1 1 1))
(cadar '((1 (1 2) 3) 3))
(caar '((1 2)))
(cdddr '(1 1 1 1 1))